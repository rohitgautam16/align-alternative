name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        project: [frontend, backend]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js for ${{ matrix.project }}
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.project }}/package-lock.json

      - name: Install dependencies (${{ matrix.project }})
        working-directory: ${{ github.workspace }}/${{ matrix.project }}
        run: npm install

      - name: Run backend tests
        if: matrix.project == 'backend'
        working-directory: ${{ github.workspace }}/backend
        run: npm test

      - name: Build frontend
        if: matrix.project == 'frontend'
        working-directory: ${{ github.workspace }}/frontend
        run: npm run build

  deploy:
    name: Deploy to Droplet
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add droplet to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Debug SSH (verbose)
        run: |
          ssh -vvv -o StrictHostKeyChecking=yes \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "echo SSH OK" || true

      - name: Sync Frontend Build
        run: |
          rsync -avz --delete \
            "${{ github.workspace }}/frontend/dist/" \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/www/align-alternative-therapy/frontend/build/"

      - name: Sync Backend Code
        run: |
          rsync -avz --delete \
            "${{ github.workspace }}/backend/" \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/home/${{ secrets.SSH_USER }}/align-alternative-therapy/backend/"

      - name: Install backend deps & restart
        run: |
          ssh -o StrictHostKeyChecking=yes \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
              cd ~/align-alternative-therapy/backend
              npm install
              pm2 restart align-api
            EOF

